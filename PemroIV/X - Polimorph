#include <iostream>

using namespace std;

class Shape {
public :
    virtual int luas() = 0;
};

class TwoDimensionalShape: public Shape {
public :
    virtual int luas() = 0;
};

class ThreeDimensionalShape: public Shape {
public :
    virtual int luas() = 0;
};

class Circle: public TwoDimensionalShape {
private :
    static const float phi = 3.14;
    int r;
public :
    Circle(int a=0) {
        r=a;
    }
    int luas() {
        cout << "Circle area : ";
        return (phi*r*r);
    }
};

class Square: public TwoDimensionalShape {
private :
    int s;
public :
    Square(int a=0) {
        s=a;
    }
    int luas() {
        cout << "Square area : ";
        return (s*s);
    }
};

class Triangle: public TwoDimensionalShape {
protected :
    int alas, t;
public :
    Triangle(int a = 0, int b = 0) {
        alas = a;
        t = b;
    }
    int luas() {
        cout << "Triangle area : ";
        return (0.5*alas*t);
    }
};

class Sphere: public ThreeDimensionalShape {
protected :
    static const float phi = 3.14;
    int r;
public :
    Sphere(int a = 0) {
        r = a;
    }
    int luas() {
        cout << "Sphere area : ";
        return ((4/3)*phi*r*r);
    }
};

class Cube: public ThreeDimensionalShape {
protected :
    int s;
public :
    Cube(int a = 0) {
        s = a;
    }
    int luas() {
        cout << "Cube area : ";
        return (s*s*s);
    }
};

class Tetrahedron: public ThreeDimensionalShape {
protected :
    int p, l, t;
public :
    Tetrahedron(int a = 0, int b = 0, int c = 0) {
        p = a;
        l = b;
        t = c;
    }
    int luas() {
        cout << "Tetrahedron area : ";
        return (p*l*t);
    }
};

int main()
{
    Shape *shape;
    Circle circ(10);
    Square squ(5);
    Triangle tri(10, 10);
    Sphere sph(5);
    Cube cub(15);
    Tetrahedron tet(10,4,2);

    shape = &circ;
    cout << shape->luas() << endl;

    shape = &squ;
    cout << shape->luas() << endl;

    shape = &tri;
    cout << shape->luas() << endl;

    shape = &sph;
    cout << shape->luas() << endl;

    shape = &cub;
    cout << shape->luas() << endl;

    shape = &tet;
    cout << shape->luas() << endl;
}
